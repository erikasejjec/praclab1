#include <iostream>
using namespace std;

void mergesort(double a[10],double aux[10],int inicio, int mitad, int finl){
    int inicio_end, num_elementos, aux_pos;
    inicio_end=mitad-1;
    aux_pos=inicio;
    num_elementos=finl-inicio+1;
    while((inicio <= inicio_end)&&(mitad<=finl)){
          if(a[inicio]<=a[mitad]){
                aux[aux_pos]=a[inicio];
                aux_pos++;
                inicio++;
          }
          else{
                aux[aux_pos]=a[mitad];
                aux_pos++;
                mitad++;
          }
    }
    while(inicio <= inicio_end){
        aux[aux_pos]=a[inicio];
        aux_pos++;
        inicio++;
    }
    while(mitad<=finl){
        aux[aux_pos]=a[mitad];
        aux_pos++;
        mitad++;
    }
    for(int i=0;i<=num_elementos;i++){
        a[finl]=aux[finl];
        finl--;
    }
}

void quicksort(double A[10], int primero, int ultimo){
    int central,i,j;
    double pivote;
    central =(primero+ultimo)/2;
    pivote =A[central];
    i=primero;
    j=ultimo;
    do
    {
        while(A[i]<pivote)j++;
        while(A[i]>pivote)j--;
        if(i<=j)
        {
            double temp;
            temp=A[i];
            A[i]=A[j];
            A[j]=temp;
            i++;
            j--;
        }
    }
        while(i<=j);

        if (primero<j)
        quicksort(A,primero,j);
        if (j<ultimo)
        quicksort(A,i,ultimo);
}

